require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');
const mongoose = require('mongoose');

const Subscriber = require('./models/Subscriber');
const Scenario = require('./models/Scenario');
const UserProgress = require('./models/UserProgress');

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ MongoDB
mongoose.connect(process.env.MONGO_URI)
  .then(() => console.log('‚úÖ MongoDB connected'))
  .catch(err => console.error('‚ùå MongoDB connection error:', err));

// --- /start ---
bot.start(async (ctx) => {
  const { id: userId, username, first_name } = ctx.from;
  const chatId = ctx.chat.id;

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞
  await Subscriber.findOneAndUpdate(
    { chatId },
    { userId, chatId, username },
    { upsert: true }
  );

  // –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  await UserProgress.findOneAndUpdate(
    { userId, chatId },
    { userId, chatId },
    { upsert: true }
  );

  // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é
  await ctx.reply(
    `üëã –ü—Ä–∏–≤–µ—Ç, ${first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!`,
    Markup.keyboard([
      ['–ê–¥–≤–µ–Ω—Ç-–∫–∞–ª–µ–Ω–¥–∞—Ä—å', '–ò—Å—Ç–æ—Ä–∏–∏'],
      ['–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã', '–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ'],
      ['–û –Ω–∞—Å', '–ö–æ–Ω—Ç–∞–∫—Ç—ã']
    ]).resize()
  );
});

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–µ–Ω—é ---
bot.hears(['–ê–¥–≤–µ–Ω—Ç-–∫–∞–ª–µ–Ω–¥–∞—Ä—å', '–ò—Å—Ç–æ—Ä–∏–∏', '–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã', '–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ', '–û –Ω–∞—Å', '–ö–æ–Ω—Ç–∞–∫—Ç—ã'], async (ctx) => {
  const userId = ctx.from.id;
  const chatId = ctx.chat.id;
  const menuName = ctx.message.text;

  // –ù–∞—Ö–æ–¥–∏–º —Å—Ü–µ–Ω–∞—Ä–∏–π –ø–æ –∏–º–µ–Ω–∏ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
  const scenario = await Scenario.findOne({ name: menuName });
  if (!scenario) return ctx.reply('–î–∏–∞–ª–æ–≥ –¥–ª—è —ç—Ç–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.');

  // –°–æ–∑–¥–∞—ë–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  await UserProgress.findOneAndUpdate(
    { userId, chatId },
    { currentScenario: scenario._id, currentStep: 0 },
    { upsert: true }
  );

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π —à–∞–≥ —Å—Ü–µ–Ω–∞—Ä–∏—è
  ctx.reply(`üó∫ –í—ã –Ω–∞—á–∞–ª–∏: ${scenario.name}`);
  if (scenario.steps.length > 0) {
    ctx.reply(`–®–∞–≥ 1: ${scenario.steps[0]}`);
  }
});

// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
bot.on('text', async (ctx) => {
  const userId = ctx.from.id;
  const chatId = ctx.chat.id;

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é (–æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—ã—à–µ)
  const menuItems = ['–ê–¥–≤–µ–Ω—Ç-–∫–∞–ª–µ–Ω–¥–∞—Ä—å', '–ò—Å—Ç–æ—Ä–∏–∏', '–ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã', '–ï–∂–µ–º–µ—Å—è—á–Ω–æ–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ', '–û –Ω–∞—Å', '–ö–æ–Ω—Ç–∞–∫—Ç—ã'];
  if (menuItems.includes(ctx.message.text)) return;

  const progress = await UserProgress.findOne({ userId, chatId }).populate('currentScenario');
  if (!progress || !progress.currentScenario) return;

  const stepIndex = progress.currentStep;
  const steps = progress.currentScenario.steps;

  ctx.reply(`–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏: ${ctx.message.text}`);

  const nextStep = stepIndex + 1;
  if (nextStep < steps.length) {
    await UserProgress.findOneAndUpdate(
      { userId, chatId },
      { currentStep: nextStep }
    );
    ctx.reply(`–®–∞–≥ ${nextStep + 1}: ${steps[nextStep]}`);
  } else {
    await UserProgress.findOneAndUpdate(
      { userId, chatId },
      { currentScenario: null, currentStep: 0 }
    );
    ctx.reply('üéâ –î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à—ë–Ω! –í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—É–Ω–∫—Ç –º–µ–Ω—é.');
  }
});

module.exports = bot;

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞ ---
if (process.env.NODE_ENV === 'production') {
  bot.telegram.setWebhook(`${process.env.WEBHOOK_URL}/bot`)
    .then(() => console.log(`ü§ñ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${process.env.WEBHOOK_URL}/bot`))
    .catch(console.error);
}
